{"version":3,"file":"component---src-pages-index-js-1aedb5c8a40a7591e6ca.js","mappings":"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","sources":["webpack://@jongolden17/personal-profile/./src/components/Seo.jsx","webpack://@jongolden17/personal-profile/./src/components/Hero.jsx","webpack://@jongolden17/personal-profile/./src/components/Project.jsx","webpack://@jongolden17/personal-profile/./src/components/Projects.jsx","webpack://@jongolden17/personal-profile/./src/components/LinkDemo.jsx","webpack://@jongolden17/personal-profile/./src/pages/index.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport structuredData from '../structured-data.json';\n\nfunction SEO({\n  description,\n  lang,\n  meta,\n  title,\n  children,\n}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            siteUrl\n            googleSiteVerification\n          }\n        }\n      }\n    `\n  );\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={site.siteMetadata.title}\n      meta={[\n        {\n          name: 'google-site-verification',\n          content: site.siteMetadata.googleSiteVerification,\n        },\n        {\n          httpEquiv: 'Content-Type',\n          content: 'text/html charset=utf-8',\n        },\n        {\n          name: 'viewport',\n          content: 'width=device-width, initial-scale=1',\n        },\n        {\n          name: 'description',\n          content: description || site.siteMetadata.description,\n        },\n        {\n          property: 'og:title',\n          content: title || site.siteMetadata.title,\n        },\n        {\n          property: 'og:description',\n          content: description || site.siteMetadata.description,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary',\n        },\n        {\n          name: 'twitter:creator',\n          content: site.siteMetadata.author,\n        },\n        {\n          name: 'twitter:title',\n          content: title,\n        },\n        {\n          name: 'twitter:description',\n          content: description || site.siteMetadata.description,\n        },\n      ].concat(meta)}\n    >\n\n      <script type=\"application/ld+json\">\n        {JSON.stringify(structuredData, null, 2)}\n      </script>\n      <link href=\"~bulma-carousel/dist/css/bulma-carousel.min.css\" rel=\"stylesheet\"></link>\n      <script src=\"~bulma-carousel/dist/js/bulma-carousel.min.js\"></script>\n      {children}\n    </Helmet>\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  description: '',\n  children: null,\n  title: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default SEO;\n","import React from 'react';\nimport Social from './Social';\n\nconst Hero = ({ title, subtitle }) => (\n  <section className=\"hero is-dark has-background-black-ter is-medium\">\n    <div className=\"hero-body flex flex-column flex-align-center flex-justify-center\">\n      <h1 className=\"title is-size-1-tablet is-size-3-mobile has-text-centered-mobile\">\n        {title}\n      </h1>\n      <p className=\"subtitle is-4 has-text-centered-mobile\">\n        {subtitle}\n      </p>\n      <Social />\n    </div>\n  </section>\n);\n\nexport default Hero;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Project = ({\n  title,\n  subtitle,\n  description,\n  role,\n  url,\n  stack,\n}) => (\n  <a href={url} target=\"_blank\" rel=\"noreferrer\">\n    <h4 className=\"title is-size-4-tablet is-size-5-mobile\">{title}</h4>\n    <p className=\"subtitle is-6 has-text-dark\">{subtitle}</p>\n    <div className=\"content has-text-dark\">\n      {description}\n    </div>\n    <div>\n      <span className=\"tag is-link mr-2\">{role}</span>\n      {stack.map((stack) => (\n        <span key={stack} className=\"tag is-info mr-2 mb-1\">{stack}</span>\n      ))}\n    </div>\n  </a>\n);\n\nProject.defaultProps = {\n  subtitle: '',\n};\n\nProject.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  description: PropTypes.string.isRequired,\n  role: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n};\n\nexport default Project;\n","import React from 'react';\nimport Project from './Project';\nimport Section from './Section';\nimport { useProjects } from '../hooks';\n\nconst Projects = () => {\n  const projects = useProjects();\n\n  return (\n    <Section>\n      <ul className=\"block-list is-outlined\">\n        {projects.map((project) => (\n          <li key={project.id} className=\"mb-3 has-background-white hoverable\">\n            <Project\n              title={project.title}\n              subtitle={project.subtitle}\n              packageName={project.packageName}\n              description={project.description}\n              url={project.url}\n              role={project.role}\n              stack={project.stack}\n            />\n          </li>\n        ))}\n      </ul>\n    </Section>\n  );\n};\n\n\n\nexport default Projects;\n","import React from 'react';\nimport Section from './Section';\n\nconst LinkDemo = () => (\n  <Section>\n    <p>This is a page for testing and demoing some tools. Right now we are testing out AccessiBe. <a href=\"https://accessibe.com\">Click here</a> for AccessiBe's website.</p>\n  </Section>\n);\n\nexport default LinkDemo;","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Seo from '../components/Seo';\nimport Hero from '../components/Hero';\nimport Projects from '../components/Projects'\nimport LinkDemo from '../components/LinkDemo';\nimport { useAccessWidget } from '../hooks';\n\nconst Index = ({ data }) => {\n  useAccessWidget();\n\n  const pathPrefix = process.env.NODE_ENV === 'development' ? '' : data.site.pathPrefix;\n\n  return (\n    <Layout pathPrefix={pathPrefix}>\n      <Seo />\n      <Hero\n        title={data.site.siteMetadata.title}\n        subtitle={data.site.siteMetadata.jobTitle}\n      />\n      <LinkDemo />\n      <Projects />\n    </Layout>\n  )\n};\n\nexport default Index;\n\nexport const query = graphql`\n  query IndexQuery {\n    site {\n      pathPrefix\n      siteMetadata {\n        title\n        jobTitle\n      }\n    }\n  }\n`;\n"],"names":["SEO","description","lang","meta","title","children","site","useStaticQuery","Helmet","htmlAttributes","siteMetadata","name","content","googleSiteVerification","httpEquiv","property","author","concat","type","JSON","stringify","structuredData","href","rel","src","defaultProps","subtitle","className","Social","Project","role","url","stack","target","map","key","projects","useProjects","Section","project","id","packageName","data","useAccessWidget","pathPrefix","Layout","Seo","jobTitle"],"sourceRoot":""}